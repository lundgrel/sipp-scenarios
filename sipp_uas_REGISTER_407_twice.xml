<?xml version="1.0" encoding="ISO-8859-1" ?>
<!DOCTYPE scenario SYSTEM "sipp.dtd">

<!-- This program is free software; you can redistribute it and/or      -->
<!-- modify it under the terms of the GNU General Public License as     -->
<!-- published by the Free Software Foundation; either version 2 of the -->
<!-- License, or (at your option) any later version.                    -->
<!--                                                                    -->
<!-- This program is distributed in the hope that it will be useful,    -->
<!-- but WITHOUT ANY WARRANTY; without even the implied warranty of     -->
<!-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the      -->
<!-- GNU General Public License for more details.                       -->
<!--                                                                    -->
<!-- You should have received a copy of the GNU General Public License  -->
<!-- along with this program; if not, write to the                      -->
<!-- Free Software Foundation, Inc.,                                    -->
<!-- 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA             -->
<!--                                                                    -->
<!--                 Sipp default 'uas' scenario.                       -->
<!--                                                                    -->

<scenario name="SIP phone first REGISTER, then INVITE. UAS responds with 407">


  <recv request="REGISTER" crlf="true">
    <action>
     <!-- since we need to send a request to the remote part -->
     <!-- we need to extract the Contact and the From header content -->
     <ereg regexp=".*" search_in="hdr" header="Contact" assign_to="full_remote_contact"/>
     <!-- assign the content of the Contaact SIP URI to the remote_contact var -->
     <!-- first var of assign_to contains the whole match -->
     <!-- <ereg regexp="sip:(.*)>.*" search_in="hdr" header="Contact" assign_to="trash,remote_contact"/>  -->
    </action>
  </recv>

  <!-- The '[last_*]' keyword is replaced automatically by the          -->
  <!-- specified header if it was present in the last message received  -->
  <!-- (except if it was a retransmission). If the header was not       -->
  <!-- present or if no message has been received, the '[last_*]'       -->
  <!-- keyword is discarded, and all bytes until the end of the line    -->
  <!-- are also discarded.                                              -->
  <!--                                                                  -->
  <!-- If the specified header was present several times in the         -->
  <!-- message, all occurences are concatenated (CRLF seperated)        -->
  <!-- to be used in place of the '[last_*]' keyword.                   -->

  <send>
    <![CDATA[

      SIP/2.0 407 What is the password
      [last_Via:]
      [last_From:]
      [last_To:];tag=[pid]SIPpTag01[call_number]
      [last_Call-ID:]
      [last_CSeq:]
      Contact: [$full_remote_contact]
      Proxy-Authenticate: Digest nonce="1111111111:410b85e442286a694b06a91184bc1e9e",algorithm=MD5,realm="mxone.seclab.com",opaque="ed383ec94720d62a939bfb6bdd98f50c"      Content-Length: 0
      Content-Length: 0

    ]]>
  </send>



  <recv request="REGISTER" crlf="true">
    <action>
     <!-- since we need to send a request to the remote part -->
     <!-- we need to extract the Contact and the From header content -->
     <ereg regexp=".*" search_in="hdr" header="Contact" assign_to="full_remote_contact"/>
     <!-- assign the content of the Contaact SIP URI to the remote_contact var -->
     <!-- first var of assign_to contains the whole match -->
     <!-- <ereg regexp="sip:(.*)>.*" search_in="hdr" header="Contact" assign_to="trash,remote_contact"/>  -->
    </action>
  </recv>

  <!-- The '[last_*]' keyword is replaced automatically by the          -->
  <!-- specified header if it was present in the last message received  -->
  <!-- (except if it was a retransmission). If the header was not       -->
  <!-- present or if no message has been received, the '[last_*]'       -->
  <!-- keyword is discarded, and all bytes until the end of the line    -->
  <!-- are also discarded.                                              -->
  <!--                                                                  -->
  <!-- If the specified header was present several times in the         -->
  <!-- message, all occurences are concatenated (CRLF seperated)        -->
  <!-- to be used in place of the '[last_*]' keyword.                   -->

  <send>
    <![CDATA[

      SIP/2.0 200 Ok now I let you in
      [last_Via:]
      [last_From:]
      [last_To:];tag=[pid]SIPpTag01[call_number]
      [last_Call-ID:]
      [last_CSeq:]
      Contact: [$full_remote_contact]
      Content-Length: 0

    ]]>
  </send>



  <recv request="REGISTER" crlf="true">
    <action>
     <!-- since we need to send a request to the remote part -->
     <!-- we need to extract the Contact and the From header content -->
     <ereg regexp=".*" search_in="hdr" header="Contact" assign_to="full_remote_contact"/>
     <!-- assign the content of the Contaact SIP URI to the remote_contact var -->
     <!-- first var of assign_to contains the whole match -->
     <!-- <ereg regexp="sip:(.*)>.*" search_in="hdr" header="Contact" assign_to="trash,remote_contact"/>  -->
    </action>
  </recv>

  <!-- The '[last_*]' keyword is replaced automatically by the          -->
  <!-- specified header if it was present in the last message received  -->
  <!-- (except if it was a retransmission). If the header was not       -->
  <!-- present or if no message has been received, the '[last_*]'       -->
  <!-- keyword is discarded, and all bytes until the end of the line    -->
  <!-- are also discarded.                                              -->
  <!--                                                                  -->
  <!-- If the specified header was present several times in the         -->
  <!-- message, all occurences are concatenated (CRLF seperated)        -->
  <!-- to be used in place of the '[last_*]' keyword.                   -->

  <send>
    <![CDATA[

      SIP/2.0 407 What is the password
      [last_Via:]
      [last_From:]
      [last_To:];tag=[pid]SIPpTag01[call_number]
      [last_Call-ID:]
      [last_CSeq:]
      Contact: [$full_remote_contact]
      Proxy-Authenticate: Digest nonce="2222222222:410b85e442286a694b06a91184bc1e9e",algorithm=MD5,realm="mxone.seclab.com",opaque="ed383ec94720d62a939bfb6bdd98f50c"      Content-Length: 0
      Content-Length: 0

    ]]>
  </send>



  <recv request="REGISTER" crlf="true">
    <action>
     <!-- since we need to send a request to the remote part -->
     <!-- we need to extract the Contact and the From header content -->
     <ereg regexp=".*" search_in="hdr" header="Contact" assign_to="full_remote_contact"/>
     <!-- assign the content of the Contaact SIP URI to the remote_contact var -->
     <!-- first var of assign_to contains the whole match -->
     <!-- <ereg regexp="sip:(.*)>.*" search_in="hdr" header="Contact" assign_to="trash,remote_contact"/>  -->
    </action>
  </recv>

  <!-- The '[last_*]' keyword is replaced automatically by the          -->
  <!-- specified header if it was present in the last message received  -->
  <!-- (except if it was a retransmission). If the header was not       -->
  <!-- present or if no message has been received, the '[last_*]'       -->
  <!-- keyword is discarded, and all bytes until the end of the line    -->
  <!-- are also discarded.                                              -->
  <!--                                                                  -->
  <!-- If the specified header was present several times in the         -->
  <!-- message, all occurences are concatenated (CRLF seperated)        -->
  <!-- to be used in place of the '[last_*]' keyword.                   -->

  <send>
    <![CDATA[

      SIP/2.0 200 Ok you can still be here
      [last_Via:]
      [last_From:]
      [last_To:];tag=[pid]SIPpTag01[call_number]
      [last_Call-ID:]
      [last_CSeq:]
      Contact: [$full_remote_contact]
      Content-Length: 0

    ]]>
  </send>



  <!-- Keep the call open for a while in case the 200 is lost to be     -->
  <!-- able to retransmit it if we receive the BYE again.               -->
  <timewait milliseconds="4000"/>


  <!-- definition of the response time repartition table (unit is ms)   -->
  <ResponseTimeRepartition value="10, 20, 30, 40, 50, 100, 150, 200"/>

  <!-- definition of the call length repartition table (unit is ms)     -->
  <CallLengthRepartition value="10, 50, 100, 500, 1000, 5000, 10000"/>

</scenario>

